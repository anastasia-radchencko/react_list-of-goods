{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","handleSort","this","goods","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","console","log","getReorderedGoods","className","type","onClick","classNames","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,WAAa,SAACJ,GACZ,EAAKG,UAAS,SAAAL,GAGZ,MAAO,CAAEC,WAFUC,IAAaL,EAASM,MAAeH,EAAMC,WAEzCC,gBAhB3B,4CAoBE,WAAU,IAAD,OACP,EAAiCK,KAAKP,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdM,EAxDH,SACLA,EADK,GAGJ,IADCN,EACF,EADEA,SAAUD,EACZ,EADYA,WAENQ,EAAY,YAAOD,GAsBzB,OApBAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQV,GACN,KAAKL,EAASgB,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKf,EAASkB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,MAITf,GACFQ,EAAaL,UAIfa,QAAQC,IAAIhB,EAAUD,GAEfQ,EA8BSU,CAAkBrB,EAAiBS,KAAKP,OAEtD,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKhB,WAAWT,EAASgB,WACxCO,UAAWG,IAAW,iBAAkB,CACtC,WAAYrB,IAAaL,EAASgB,WAJtC,iCAUA,wBACEQ,KAAK,SACLC,QAAS,kBAAM,EAAKhB,WAAWT,EAASkB,SACxCK,UAAWG,IAAW,oBAAqB,CACzC,WAAYrB,IAAaL,EAASkB,SAJtC,4BAUA,wBACEM,KAAK,SACLC,QAASf,KAAKH,QACdgB,UAAWG,IAAW,oBAAqB,CACzC,WAAYhB,KAAKP,MAAMC,aAJ3B,sBAWGC,IAAaL,EAASM,MAAQF,IAC7B,wBACEoB,KAAK,SACLD,UAAU,4BACVE,QAAS,kBAAM,EAAKhB,WAAWT,EAASM,OAH1C,sBAWN,6BACGK,EAAMgB,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,eAxErB,GAAyBC,IAAMC,WC5D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2ffebeb9.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleSort = (sortType: SortType) => {\n    this.setState(state => {\n      const isReversed = sortType === SortType.NONE ? false : state.isReversed;\n\n      return { isReversed, sortType };\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={() => this.handleSort(SortType.ALPHABET)}\n            className={classNames('button is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.handleSort(SortType.LENGTH)}\n            className={classNames('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.reverse}\n            className={classNames('button is-warning', {\n              'is-light': this.state.isReversed,\n            })}\n          >\n            Reverse\n          </button>\n\n          {\n            (sortType !== SortType.NONE || isReversed) && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={() => this.handleSort(SortType.NONE)}\n              >\n                Reset\n              </button>\n            )\n          }\n        </div>\n\n        <ul>\n          {goods.map(good => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}